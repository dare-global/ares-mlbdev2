// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
//	MLB Utility Library Include File
// ////////////////////////////////////////////////////////////////////////////
/*
	File Name			:	UserName.hpp

   File Description	:	Include file for the portable page size functions.

	Revision History	:	1998-04-08 --- Creation
									Michael L. Brock
                        2023-01-09 --- Migration to C++ MlbDev2/Utility.
                           Michael L. Brock

		Copyright Michael L. Brock 1998 - 2023.
		Distributed under the Boost Software License, Version 1.0.
		(See accompanying file LICENSE_1_0.txt or copy at
		http://www.boost.org/LICENSE_1_0.txt)

*/
// ////////////////////////////////////////////////////////////////////////////

#ifndef HH__MLB__Utility__UserName_hpp__HH

#define HH__MLB__Utility__UserName_hpp__HH	1

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
/**
	\file UserName.hpp

	\brief	The page aize functions header file.
*/
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// ////////////////////////////////////////////////////////////////////////////
//	Required include files...
// ////////////////////////////////////////////////////////////////////////////

#include <Utility/Utility.hpp>

#include <string>

#ifndef _MSC_VER
# include <unistd.h>
# include <sys/types.h>
# include <pwd.h>
# include <dirent.h>
#elif (_MSC_VER < 1900)
# include <Windows.h>
#else
# pragma warning(push)
# pragma warning(disable:5039)
# include <Windows.h>
# include <Lmcons.h>
# pragma warning(pop)
#endif // #ifndef _MSC_VER

// ////////////////////////////////////////////////////////////////////////////

namespace MLB {

namespace Utility {

// ////////////////////////////////////////////////////////////////////////////
#ifdef _Windows
const std::size_t UserNameLength = UNLEN;
#elif defined(__linux__)
// RHEL 3.10 local_lim.h defined LOGIN_NAME_MAX to be 256. So ...
const std::size_t UserNameLength = 256;
#else
const std::size_t UserNameLength = 256;		// And, one hopes, sufficient.
#endif // #ifdef _Windows
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
API_UTILITY std::string  GetCurrentUserName();
API_UTILITY char        *GetCurrentUserName(char *user_name,
	std::size_t user_name_length);
// ////////////////////////////////////////////////////////////////////////////

} // namespace Utility

} // namespace MLB

#endif // #ifndef HH__MLB__Utility__UserName_hpp__HH

